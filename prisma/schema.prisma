// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionType {
  PAYIN
  PAYOUT
}

enum TransactionStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  CANCELED
}

model User {
  id         Int    @id @default(autoincrement())
  email      String @unique
  first_name String
  last_name  String
  password   String

  // Timestamps
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  transactions Transaction[]

  @@map("users")
}

model Transaction {
  id         Int               @id @default(autoincrement())
  type       TransactionType // Distinguishes between payins and payouts
  amount     Decimal           @db.Decimal(10, 2)
  orderToken String            @unique // Unique identifier from payment provider
  status     TransactionStatus @default(PENDING)

  // For payouts only - can be null for payins
  number String? // Recipient account number for payouts

  // User relationship
  userId Int
  user   User @relation(fields: [userId], references: [id])

  // Error handling
  errorCode    String?
  errorMessage String?

  // Timestamps
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("transactions")
}
